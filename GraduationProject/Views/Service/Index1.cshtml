@model GraduationProject.Helper.PaginatedResult<GraduationProject.ViewModels.ServiceViewModel>

<h1>Services</h1>
<p>
    <a class="btn btn-primary" asp-action="Create"><i class="fa fa-plus"></i> Add New Service</a>
</p>

<!-- Search form -->
<form method="get" asp-action="Index">
    <input type="text" name="search" value="@ViewData["Search"]" placeholder="Search services..." />
    <button type="submit">Search</button>
</form>

<!-- Display services -->
<table class="table">
    <thead>
        <tr>
            <th>Description</th>
            <th>Price</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var service in Model.Items)
        {
            <tr>
                <td>@service.Description</td>
                <td>@service.Price</td>
                <td>
                    <a href="@Url.Action("Details", "Service", new { id = service.Id })" class="btn btn-primary">Details</a>
                    <a href="@Url.Action("Edit", "Service", new { id = service.Id })" class="btn btn-warning">Edit</a>
                    <a href="@Url.Action("Delete", "Service", new { id = service.Id })" class="btn btn-danger">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<!-- Pagination -->
<div>
    Page @Model.CurrentPage of @Model.TotalPages
    @if (Model.CurrentPage > 1)
    {
        <a asp-action="Index" asp-route-page="@(Model.CurrentPage - 1)">Previous</a>
    }
    @if (Model.CurrentPage < Model.TotalPages)
    {
        <a asp-action="Index" asp-route-page="@(Model.CurrentPage + 1)">Next</a>
    }
</div>
